<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- context:annotation-config -->
	<!-- 配置整合mybatis过程 -->
	<!-- 1 配置数据库相关参数s properties的属性${url} -->
	<!-- 解决context:property-placeholder报错的方法：修改头文件 -->
	<!-- http://www.oschina.net/question/2327568_246535 上面解决方案的网址 -->
	<!-- context:property-placeholder location="classpath:jdbc.properties" -->
	<!-- 数据库相关参数的配置 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties"></property>
	</bean>

	<!-- 2 数据库的连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${username}"></property>
		<property name="password" value="${password}"></property>
		<!-- c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="10"></property>
		<!-- 关闭链接的时候不自动commit -->
		<property name="autoCommitOnClose" value="false"></property>
		<!-- 超时时间 -->
		<property name="checkoutTimeout" value="1000"></property>
		<!-- 当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"></property>
	</bean>
	<!-- 3 对话工厂：sqlSession对象配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 接下来就是mybatis和spring整合的部分了 -->
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置mybatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 节约配置的方式：扫描entity包，使用别名：为了达到更少的配置的目的 -->

		<property name="typeAliasesPackage" value="org.seckill.entity"></property>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>

	</bean>
	<!-- 4 配置扫描Dao接口包，为了动态实现Dao接口，注入到spring容器中 -->
	<!-- 为什么这里没有id了呢？ 因为这个没有其他的引入???? -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 属性sqlSessionFactory注入的过程 -->
		<!-- 这里其实提供了很多中方式，但是有最佳的推荐 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao"></property>
	</bean>
	<!-- redisDao -->
	
</beans>